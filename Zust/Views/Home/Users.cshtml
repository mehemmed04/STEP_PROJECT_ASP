@using Zust.Web.Helpers.ConstantHelpers
@using Microsoft.AspNetCore.Identity;
@using Zust.Entities.Models;
@{
    var userManager = Context.RequestServices.GetService<UserManager<User>>();
    var user = await userManager.GetUserAsync(Context.User);
    var TakeUserCount = Constants.TakeUserCount;
    ViewData["Title"] = "Zust - Users";
}

<style>
    .user-image {
        max-width: 100px !important;
        max-height: 100px !important; 
        width: 100px !important; 
        height: 100px !important; 
        object-fit: cover !important; 
    }

    .transparent-button {
        background-color: transparent;
        border: 1px solid transparent;
    }

    .single-friends-card:hover .red-icon {
        background-color: var(--red-color) !important;
        color: var(--white-color) !important;
    }

    .single-friends-card:hover .yellow-icon {
        background-color: var(--yellow-color) !important;
        color: var(--black-color) !important;
    }

    .single-friends-card:hover .main-icon {
        background-color: var(--main-color) !important;
        color: var(--white-color) !important;
    }

    .single-friends-card:hover .send-request-btn {
        background-color: var(--main-color) !important;
        color: var(--white-color) !important;
        border: 1px solid var(--main-color) !important;
    }

    .single-friends-card:hover .remove-friend-btn {
        background-color: var(--red-color) !important;
        color: var(--white-color) !important;
        border: 1px solid var(--red-color) !important;
    }

    .single-friends-card:hover .cancel-btn {
        background-color: var(--yellow-color) !important;
        color: var(--black-color) !important;
        border: 1px solid var(--yellow-color) !important;
    }

    .search-box{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: end;
    }

    .search-box input{
        border-radius: 10px;
        border : 1px solid gray;
    }
</style>



<div class="page-banner-box bg-4">
    <h3>Zust Users</h3>
</div>

<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" role="tabpanel">
      @*  <div class="search-box">
            <form>
                <input type="text" class="input-search" placeholder="Search">
                <button type="submit"><i class="ri-search-line"></i></button>
            </form>
        </div>*@

        <div class="friends-inner-box-style d-flex justify-content-between align-items-center margin-top-25">
            <div class="friends-search-box" style="width: 100%;">
                <div style="border: 1px solid gray; border-radius: 6px;">
                    <input onkeydown="handleKeyPress(event)" id="searchText" type="text" class="input-search" placeholder="Search users...">
                    <button onclick="searchUsers()"><i class="ri-search-line"></i></button>
                </div>
            </div>
        </div>

        <div class="row justify-content-center" id="users">
        </div>
        <div id="loadMore" class="load-more-posts-btn">
            <button class="transparent-button" onclick="LoadUsers()"><i class="flaticon-loading"></i> Load More</button>
        </div>
    </div>
</div>


<script src="~/assets/js/jquery.min.js"></script>
<link rel="stylesheet" href="~/assets//css/main.css"/>
<script src="~/assets/js/functions.js"></script>
<script>
    var usersInView = [];
    var takeUserCount = @TakeUserCount;
    var container = document.getElementById("users");


    function handleKeyPress(event) {
        if (event.keyCode === 13) { // 13 corresponds to the Enter key
            event.preventDefault(); // Prevent the default form submission behavior
            searchUsers(); // Call your desired function here
        }
    }

    function hideLoadMore(){
        document.getElementById("loadMore").style.display = "none";
    }

    function searchUsers(){
        hideLoadMore();
        var searchText = document.getElementById("searchText").value.trim();
        if (searchText == '') return;
        GetUsersByText(searchText);
    }

    function GetUsersByText(text){
        $.ajax({
            url: '/api/User/GetUsersByText/' + text,
            method: 'GET',
            success: function (data) {
                console.log(data);
                usersInView = data;
                ShowUsersAsync();
            },
            error: function (error) {
                alert("Error occurred: " + error.responseText);
            }
        });
    }

    async function getSentFriendRequests() {
        var id = '@user.Id.ToString()';
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: `/api/FriendRequest/GetSentFriendRequests?userId=` + id,
                method: 'GET',
                success: function (data) {
                    resolve(data);
                },
                error: function (error) {
                    alert("Error occurred: " + error.responseText);
                }
            });
        });
    }

    var sentFriendRequests;

    async function callGetSentFriendRequests() {
        try {
            sentFriendRequests = await getSentFriendRequests();
        } catch (error) {
            alert("Error occurred: " + error.responseText);
        }
    }

    callGetSentFriendRequests();

    async function LoadUsers() {
        await GetUsersAsync();
    }

    function GetAllUsersCount() {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: '/api/User/GetAllUsersCount',
                method: 'GET',
                success: function (data) {
                    resolve(data);
                },
                error: function (error) {
                    alert("Error occurred: " + error.responseText);
                }
            });
        });
    }

    function GetUsersAsync() {
        $.ajax({
            url: '/api/User/GetUsers',
            method: 'GET',
            data: {
                startIndex: usersInView.length,
                userCount: takeUserCount
            },
            success: function (data) {
                usersInView.push(...data);
                ShowUsersAsync();
            },
            error: function (error) {
                alert("Error occurred: " + error.responseText);
            }
        });
    }

    async function ShowUsersAsync() {
        if (usersInView.length === 0) {
            container.innerHTML = getNoResultHtml("No results found", "Sorry! We couldn't find any results.");
        }
        else {
            var allUsersCount = await GetAllUsersCount();
            if (usersInView.length == allUsersCount - 1) { // Current User Subtracted
                document.getElementById("loadMore").style.display = "none";
            }
            var content = '';
            for (var i = 0; i < usersInView.length; i++) {
                var user = usersInView[i];
                let btnContent = '';
                let iconClass = '';
                if (sentFriendRequests.some(i => i.receiverId === user.id && i.status === 'Pending')) {
                    btnContent = `<button onclick="cancelFriendRequest('${user.id}')" class="mx-auto cancel-btn">Cancel Friend Request</button>`;
                    iconClass = 'yellow-icon';
                } else if (sentFriendRequests.some(i => i.receiverId === user.id && i.status === 'Accepted')) {
                    btnContent = `<button onClick="removeFriend('${user.id}')" class="mx-auto remove-friend-btn">Remove Friend</button>`;
                    iconClass = 'red-icon';
                } else {
                    btnContent = `<button onclick="sendFriendRequest('${user.id}')" type="submit" class="mx-auto send-request-btn">Send Friend Request</button>`;
                    iconClass = 'main-icon';
                }

                var subContent = `
                                        <div class="col-lg-3 col-sm-6">
                                            <div class="single-friends-card">
                                                <div class="friends-image">
                                                    <a href="/home/users?id=${user.id}">
                                                        <img src="${user.coverImage}" alt="${user.normalizedUserName}">
                                                    </a>
                                                    <div class="icon">
                                                         <a href="/home/users?id=${user.id}"><i class="flaticon-user ${iconClass}"></i></a>
                                                    </div>
                                                </div>
                                                <div class="friends-content">
                                                    <div class="friends-info d-flex justify-content-between align-items-center">
                                                        <a href="/home/users?id=${user.id}">
                                                                <img src="${user.imageUrl}" alt="${user.username}" class="user-image">
                                                        </a>
                                                        <div class="text ms-3">
                                                            <h3>${user.normalizedUserName}</h3>
                                                            <span>${truncateText(user.email, 15)}</span>
                                                        </div>
                                                    </div>
                                                    <ul class="statistics">
                                                        <li>
                                                            <a>
                                                                <span class="item-number">0</span>
                                                                <span class="item-text">Likes</span>
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a>
                                                                <span class="item-number">0</span>
                                                                <span class="item-text">Following</span>
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a>
                                                                <span class="item-number">0</span>
                                                                <span class="item-text">Followers</span>
                                                            </a>
                                                        </li>
                                                    </ul>
                                                    <div class="button-group d-flex justify-content-between align-items-center">
                                                        <div class="row add-friend-btn w-100" style="width: 100%;">
                                                            ${btnContent}
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>`;

                content += subContent;
            }
            container.innerHTML = content;
        }
    }

    function truncateText(text, maxLength) {
        if (text.length > maxLength) {
            return text.substring(0, maxLength) + "...";
        } else {
            return text;
        }
    }

    function sendFriendRequest(receiverId) {
        $.ajax({
            url: '/api/FriendRequest/AddFriendRequest?receiverId=' + receiverId,
            method: 'POST',
            success: async function () {
                await callGetSentFriendRequests();
                ShowUsersAsync();
            },
            error: function (error) {
                alert("Error occurred: " + error.responseText);
            }
        });
    }

    function cancelFriendRequest(receiverId) {
        $.ajax({
            url: '/api/FriendRequest/CancelFriendRequest?receiverId=' + receiverId,
            method: 'POST',
            success: async function () {
                await callGetSentFriendRequests();
                ShowUsersAsync();
            },
            error: function (error) {
                alert("Error occurred: " + error.responseText);
            }
        });
    }

    LoadUsers();
</script>